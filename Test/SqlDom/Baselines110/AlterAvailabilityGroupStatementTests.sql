ALTER AVAILABILITY GROUP group1 JOIN;


GO
ALTER AVAILABILITY GROUP group1 ADD DATABASE db1, db2;


GO
ALTER AVAILABILITY GROUP group1 REMOVE DATABASE db1, db2, db3;


GO
ALTER AVAILABILITY GROUP group1 ADD REPLICA ON 'server1' WITH (AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, FAILOVER_MODE = AUTOMATIC, ENDPOINT_URL = 'TCP://1234:80', SECONDARY_ROLE (ALLOW_CONNECTIONS = NO), SESSION_TIMEOUT = 10, APPLY_DELAY = 1), 'server2' WITH (FAILOVER_MODE = MANUAL, APPLY_DELAY = 1, ENDPOINT_URL = 'TCP://1234:80', PRIMARY_ROLE (ALLOW_CONNECTIONS = READ_WRITE), AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, SESSION_TIMEOUT = 10), 'server3' WITH (AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, FAILOVER_MODE = AUTOMATIC, ENDPOINT_URL = 'TCP://1234:80', SECONDARY_ROLE (ALLOW_CONNECTIONS = ALL), SESSION_TIMEOUT = 10, APPLY_DELAY = 1);


GO
ALTER AVAILABILITY GROUP group1 MODIFY REPLICA ON 'server1' WITH (AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, FAILOVER_MODE = AUTOMATIC, ENDPOINT_URL = 'TCP://1234:80', SECONDARY_ROLE (ALLOW_CONNECTIONS = ALL), SESSION_TIMEOUT = 10, APPLY_DELAY = 1), 'server2' WITH (FAILOVER_MODE = MANUAL, APPLY_DELAY = 1, ENDPOINT_URL = 'TCP://1234:80', PRIMARY_ROLE (ALLOW_CONNECTIONS = ALL), AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, SESSION_TIMEOUT = 10);


GO
ALTER AVAILABILITY GROUP group1 REMOVE REPLICA ON 'server1', 'server2';


GO
ALTER AVAILABILITY GROUP group1 SET (REQUIRED_COPIES_TO_COMMIT = 5);


GO
ALTER AVAILABILITY GROUP group1 FAILOVER;


GO
ALTER AVAILABILITY GROUP group1 FAILOVER WITH (TARGET = 'server1');


GO
ALTER AVAILABILITY GROUP group1 FORCE_FAILOVER_ALLOW_DATA_LOSS;


GO
ALTER AVAILABILITY GROUP group1 ONLINE;


GO
ALTER AVAILABILITY GROUP group1 OFFLINE;